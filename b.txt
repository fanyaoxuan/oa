grep 关键字  文件名    包含关键字的
grep -v 关键字  文件名 不包含关键字的行
grep ^# 文件名  以#开头的行
grep ^$ 文件名  显示以空行开头 （5$）


find 目录 -options print 文件名
按照文件名查找
find 路径 -name "*.txt"
find /etc -name "host*"
按权限查找
find 路径 -perm 755

按文件拥有者查找
find 路径 -user 用户名
find 路径 -group 
find 路径 -mtime 时间（按照修改时间查找）
	ctime   改变时间
	atime   访问时间
（其中使用-表示距今几天  +表示大于几天的）

按照类型查找
(b 块设备文件
 d 目录
 c 字符设备文件
 p 管道文件 
 l 链接文件
 f 普通文件
)
find 路径 -type 


find /etc -type d -exec ls {} \;



计划任务：
at 只能执行一次
at 时间点  
	输入计划执行的命令
at -l 查看计划任务

atrm + 计划号
atrm + 执行的命令


cron 克隆表达式
 /etc/crontab  包含了计划任务 

crontab -e 分 时 日 月 星期

*/5 每5分钟

anacron  : 错过时间仍会执行计划任务



dns  53端口
smtp 25端口
https 443端口

ntp 123端口
tftp 69
snmp 161

端口号	/etc/services

netstat -anput
-a  all
-n  不解析名字
-p 应用程序
-u 显示udp
-t 显示tcp

修改网络
vim /etc/sysconfig/network-scripts/ifcfg-eth0 


修改主机名
vim /etc/sysconfig/network

hostname  主机名  临时配置主机名

修改了配置文件需要重启对应的服务

route -n  查看路由信息


shell脚本

shell脚本编写：
	创建shell脚本文件
		#！/bin/bash
		执行的命令
	赋予执行权限
		chmod 755 shell脚本
	执行shell脚本
		sh + 脚本

shell变量
常用的shell变量：自定义变量、环境变量、位置变量、预定义变量
可以使用echo来输出变量

自定义变量的定义： Linux=7.2  
echo=$Linux  输出变量值
echo=${Linux}system 将两个结果链接起来

read 变量名。。。 简单的交互给变量赋值
read -p 增加提示信息

shell表达式
expr $a \* $b
abc=$(expr $a \* $b)


环境变量：
env  查看当前的环境变量

环境变量的配置文件：/etc/profile
宿主目录的环境变量：/home/felix/.bash_profile

echo $PATH 查看可执行命令的路径

将写的将脚本添加的环境变量中：
PATH="$PATH:脚本路径"

立即生效：source /etc/profile

位置变量：使用$0……$9

./add.sh  10  20(其中10为$1  20为$2)  !$表示上一个命令的最后一个参数



sed  流编辑器：主要用来自动编辑一个或多个文件简化对文件的重复操作
非交互式编辑文件

sed -n  读取某行的内容
sed -n "1,3p" 文件  显示前三行
sed -n "1,3!p" 文件   不显示前三行
sed -n "3,+3p" wenjian  显示第3行后的三行
sed '1i##'passwd >> a.t 追加内容
sed '$a@@@' passwd 在最后追加
sed '3c$$$' passwd  替换第3行内容

awk ‘{print $0}’ 文件  显示所有的内容
awk ‘{print $1}’ 文件  显示文件第一列内容
awk -F:'{print $1}' 文件名


ln -s 文件   软连接名  
ln 文件  硬链接   （同步更新的，但是时间值不同）
	同步更新的原理（使用了相同i节点）
ls -i  查看文件的inode 每个文件肯定都有一个i节点


find -ctime/atime/mtime 
find -cmin/amin/mmin

-a  两个条件都匹配
-o 任意匹配

-exec 不询问确认
-ok  询问确认是否执行后面的命令

find /etc -inum 16 -exec rm -rf {} \;


locate 根据索引查找第一次执行前，需要先进行updatedb更新索引
/etc/services 保存了所有的端口信息


man  既可以查看命令的帮助也可以查看配置文件的帮助
man 5 passwd  使用配置文件的帮忙使用5
man passwd  默认使用的是查看命令的帮助


info 跟man相同


whatis ls   查看命令的用途
makewhatis  更新帮助信息






gzip
bz2  -t   不解压查看文档内容
ctrl+u  删除前面所有的命令字符


wc -l 统计文件个数

&&
||   执行命令时使用

which


:set ic 忽略大小写
：%s/old/new/g  全文替换
:%s/old/new/c  询问是否替换相应的字符

:w 路径  将文件另存为


:r 导入相应的文件
:r !执行的命令  将命令的结果导入文件中



init.d  存放所有的服务
rc.d 启动相应级别需要启动的服务



设置自启动：
将生成的软连接放到rcn.d文件夹中

chkconfig  --list   查看安装的服务的运行级别和启动情况
chkconfig --level 2345 服务名称    设置服务在2345的启动情况

ntsysv  图形界面修改服务的启动

dmesg 查看启动过程的信息

：n1,n2s/old/new/g  指定范文替换



less 中使用Ctrl+b上翻页  ctrl+f  下翻页



给grub加密：
grub-md5-crypt   生成密文
在grub.conf中配置passwd --md5 密文


rpm -qf  查询文件隶属于那个软件包
rpm -qi  查看软件包的信息   rpm -qip
rpm -ql 查看已经安装的软件包  rpm -qlp 查看未安装的软件包将安装哪些文件
rpm -qd 查看软件包安装的帮助的文档
rpm -qc 查询软件包的配置文件
 -p  查看未安装软件包相关信息

配置文件的注释："

回复指定的文件
rpm2cpio 软件包 | cpio -idv 文件夹


修改本地yum源：
首先将/mnt/CentOS所有的rpm包cp到一个数据仓库中
编辑yum.repo.d/CentOS-Base.repo中baseurl字段（指定仓库地址）
createrepo  -v  数据仓库的路径
yum clean all
yum makecache
yum -y install samba  不提示确认



less /etc/services  使用u向上翻页  使用d向下翻页


/etc/skel  新建用户的文件从这里面cp


用户的默认配置文件：
/etc/login.defs
/etc/default/useradd


vim中:e!  将文件恢复到最原始的状态




权限管理：
粘着位   权限为1  标志为t   主要是在同一个目录下所有的用户都可以创建修改删除文件，但只能对拥有的而文件进行操作
setUid 权限为4  标志为s 在执行的一瞬间使用root权限进性
guid  权限为2  标志为s  在执行时使用组权限进性操作

修改用户的组：
usermod -G 组名 用户
gpasswd -a 用户  组名

gpasswd -A 用户 组名  将用户设置为组的管理员
gpasswd  组名   为组设置密码
gpasswd -r 组名  删除组密码
gpasswd -R 组名   禁止切换到改组

groups 查看属于哪些组
newgrp  切换组
id

pwck 检测passwd文件（锁定文件）
vipw 编辑passwd，锁定文件
grpck 检测组配置文件
vigr   编辑group配置文件

chage -l user  查看用户的密码信息
pwconv  pwunconv  转换密码


后台进程在执行的命令后加&即可

pgrep  httpd  查看一个服务的进程
pkill httpd  杀死一组进程

nohup find / -name init* &  退出系统命令仍后台执行



bg  1   后台执行
fg 1  前台执行
jobs 查看所有的挂起的任务


top 
d  设置刷新时间
c   查看执行命令的全路径
u 查看指定的用户进程
r  修改运行级别


计划任务：
at 时间   编辑命令 （at -f  文件  时间）
	时间表示
at.allow  at.deny


batch   执行计划任务时，先查看下负载是否在0.8以下

crontab -l  查看一个计划任务
crontab -r  删除计划任务
crontab -e 生成计划任务


cron.allow  cron.deny 限定用户创建计划任务的限定


df -k  显示磁盘分区
df -h
df -m

du -sh   查看文件或目录的大小

fsck  修复文件系统
fsck -y  直接修复文件系统

卸载挂载点
umount /mnt 卸载挂载点
eject  弹出光驱

fdisk -l  /dev/sdb  查看硬盘信息

添加硬盘分区
fdisk /dev/sdb   进行分区
mkfs  /dev/sdb1     对分区进行格式化




passwd -l felix   锁定felix
