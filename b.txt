grep 关键字  文件名    包含关键字的
grep -v 关键字  文件名 不包含关键字的行
grep ^# 文件名  以#开头的行
grep ^$ 文件名  显示以空行开头 （5$）


find 目录 -options print 文件名
按照文件名查找
find 路径 -name "*.txt"
find /etc -name "host*"
按权限查找
find 路径 -perm 755

按文件拥有者查找
find 路径 -user 用户名
find 路径 -group 
find 路径 -mtime 时间（按照修改时间查找）
	ctime   改变时间
	atime   访问时间
（其中使用-表示距今几天  +表示大于几天的）

按照类型查找
(b 块设备文件
 d 目录
 c 字符设备文件
 p 管道文件 
 l 链接文件
 f 普通文件
)
find 路径 -type 


find /etc -type d -exec ls {} \;



计划任务：
at 只能执行一次
at 时间点  
	输入计划执行的命令
at -l 查看计划任务

atrm + 计划号
atrm + 执行的命令


cron 克隆表达式
 /etc/crontab  包含了计划任务 

crontab -e 分 时 日 月 星期

*/5 每5分钟

anacron  : 错过时间仍会执行计划任务



dns  53端口
smtp 25端口
https 443端口

ntp 123端口
tftp 69
snmp 161

端口号	/etc/services

netstat -anput
-a  all
-n  不解析名字
-p 应用程序
-u 显示udp
-t 显示tcp

修改网络
vim /etc/sysconfig/network-scripts/ifcfg-eth0 


修改主机名
vim /etc/sysconfig/network

hostname  主机名  临时配置主机名

修改了配置文件需要重启对应的服务

route -n  查看路由信息


shell脚本

shell脚本编写：
	创建shell脚本文件
		#！/bin/bash
		执行的命令
	赋予执行权限
		chmod 755 shell脚本
	执行shell脚本
		sh + 脚本

shell变量
常用的shell变量：自定义变量、环境变量、位置变量、预定义变量
可以使用echo来输出变量

自定义变量的定义： Linux=7.2  
echo=$Linux  输出变量值
echo=${Linux}system 将两个结果链接起来

read 变量名。。。 简单的交互给变量赋值
read -p 增加提示信息

shell表达式
expr $a \* $b
abc=$(expr $a \* $b)


环境变量：
env  查看当前的环境变量

环境变量的配置文件：/etc/profile
宿主目录的环境变量：/home/felix/.bash_profile

echo $PATH 查看可执行命令的路径

将写的将脚本添加的环境变量中：
PATH="$PATH:脚本路径"

立即生效：source /etc/profile

位置变量：使用$0……$9

./add.sh  10  20(其中10为$1  20为$2)  !$表示上一个命令的最后一个参数



sed  流编辑器：主要用来自动编辑一个或多个文件简化对文件的重复操作
非交互式编辑文件

sed -n  读取某行的内容
sed -n "1,3p" 文件  显示前三行
sed -n "1,3!p" 文件   不显示前三行
sed -n "3,+3p" wenjian  显示第3行后的三行
sed '1i##'passwd >> a.t 追加内容
sed '$a@@@' passwd 在最后追加
sed '3c$$$' passwd  替换第3行内容

awk ‘{print $0}’ 文件  显示所有的内容
awk ‘{print $1}’ 文件  显示文件第一列内容
awk -F:'{print $1}' 文件名
